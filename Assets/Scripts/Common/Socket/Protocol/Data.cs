// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Protobuf {

  /// <summary>Holder for reflection information generated from Data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for Data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpEYXRhLnByb3RvEg9jb21tb24ucHJvdG9idWYixQEKCkNvbW1vbkRhdGES",
            "FQoNbWF4X3BsYXllcl9pZBgBIAEoBRJLChF1aWRfdG9fcGxheWVybGlzdBgC",
            "IAMoCzIwLmNvbW1vbi5wcm90b2J1Zi5Db21tb25EYXRhLlVpZFRvUGxheWVy",
            "bGlzdEVudHJ5GlMKFFVpZFRvUGxheWVybGlzdEVudHJ5EgsKA2tleRgBIAEo",
            "CRIqCgV2YWx1ZRgCIAEoCzIbLmNvbW1vbi5wcm90b2J1Zi5QbGF5ZXJMaXN0",
            "OgI4ASIdCgpQbGF5ZXJMaXN0Eg8KB2lkX2xpc3QYASADKAUiPAoMUGxheWVy",
            "U3RydWN0EiwKCWl0ZW1fZGF0YRgBIAEoCzIZLmNvbW1vbi5wcm90b2J1Zi5J",
            "dGVtRGF0YSKFAQoISXRlbURhdGESDAoEZ3JpZBgBIAEoBRI6CglpdGVtX2xp",
            "c3QYAiADKAsyJy5jb21tb24ucHJvdG9idWYuSXRlbURhdGEuSXRlbUxpc3RF",
            "bnRyeRovCg1JdGVtTGlzdEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoBToCOAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.CommonData), global::Common.Protobuf.CommonData.Parser, new[]{ "MaxPlayerId", "UidToPlayerlist" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.PlayerList), global::Common.Protobuf.PlayerList.Parser, new[]{ "IdList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.PlayerStruct), global::Common.Protobuf.PlayerStruct.Parser, new[]{ "ItemData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Protobuf.ItemData), global::Common.Protobuf.ItemData.Parser, new[]{ "Grid", "ItemList" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CommonData : pb::IMessage<CommonData> {
    private static readonly pb::MessageParser<CommonData> _parser = new pb::MessageParser<CommonData>(() => new CommonData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonData(CommonData other) : this() {
      maxPlayerId_ = other.maxPlayerId_;
      uidToPlayerlist_ = other.uidToPlayerlist_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonData Clone() {
      return new CommonData(this);
    }

    /// <summary>Field number for the "max_player_id" field.</summary>
    public const int MaxPlayerIdFieldNumber = 1;
    private int maxPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPlayerId {
      get { return maxPlayerId_; }
      set {
        maxPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "uid_to_playerlist" field.</summary>
    public const int UidToPlayerlistFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Common.Protobuf.PlayerList>.Codec _map_uidToPlayerlist_codec
        = new pbc::MapField<string, global::Common.Protobuf.PlayerList>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Common.Protobuf.PlayerList.Parser), 18);
    private readonly pbc::MapField<string, global::Common.Protobuf.PlayerList> uidToPlayerlist_ = new pbc::MapField<string, global::Common.Protobuf.PlayerList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Common.Protobuf.PlayerList> UidToPlayerlist {
      get { return uidToPlayerlist_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxPlayerId != other.MaxPlayerId) return false;
      if (!UidToPlayerlist.Equals(other.UidToPlayerlist)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxPlayerId != 0) hash ^= MaxPlayerId.GetHashCode();
      hash ^= UidToPlayerlist.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxPlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxPlayerId);
      }
      uidToPlayerlist_.WriteTo(output, _map_uidToPlayerlist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayerId);
      }
      size += uidToPlayerlist_.CalculateSize(_map_uidToPlayerlist_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonData other) {
      if (other == null) {
        return;
      }
      if (other.MaxPlayerId != 0) {
        MaxPlayerId = other.MaxPlayerId;
      }
      uidToPlayerlist_.Add(other.uidToPlayerlist_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxPlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            uidToPlayerlist_.AddEntriesFrom(input, _map_uidToPlayerlist_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerList : pb::IMessage<PlayerList> {
    private static readonly pb::MessageParser<PlayerList> _parser = new pb::MessageParser<PlayerList>(() => new PlayerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerList(PlayerList other) : this() {
      idList_ = other.idList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerList Clone() {
      return new PlayerList(this);
    }

    /// <summary>Field number for the "id_list" field.</summary>
    public const int IdListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_idList_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> idList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IdList {
      get { return idList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!idList_.Equals(other.idList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= idList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      idList_.WriteTo(output, _repeated_idList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += idList_.CalculateSize(_repeated_idList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerList other) {
      if (other == null) {
        return;
      }
      idList_.Add(other.idList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            idList_.AddEntriesFrom(input, _repeated_idList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerStruct : pb::IMessage<PlayerStruct> {
    private static readonly pb::MessageParser<PlayerStruct> _parser = new pb::MessageParser<PlayerStruct>(() => new PlayerStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStruct(PlayerStruct other) : this() {
      ItemData = other.itemData_ != null ? other.ItemData.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStruct Clone() {
      return new PlayerStruct(this);
    }

    /// <summary>Field number for the "item_data" field.</summary>
    public const int ItemDataFieldNumber = 1;
    private global::Common.Protobuf.ItemData itemData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Protobuf.ItemData ItemData {
      get { return itemData_; }
      set {
        itemData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ItemData, other.ItemData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (itemData_ != null) hash ^= ItemData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (itemData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ItemData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (itemData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStruct other) {
      if (other == null) {
        return;
      }
      if (other.itemData_ != null) {
        if (itemData_ == null) {
          itemData_ = new global::Common.Protobuf.ItemData();
        }
        ItemData.MergeFrom(other.ItemData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (itemData_ == null) {
              itemData_ = new global::Common.Protobuf.ItemData();
            }
            input.ReadMessage(itemData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemData : pb::IMessage<ItemData> {
    private static readonly pb::MessageParser<ItemData> _parser = new pb::MessageParser<ItemData>(() => new ItemData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Protobuf.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData(ItemData other) : this() {
      grid_ = other.grid_;
      itemList_ = other.itemList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemData Clone() {
      return new ItemData(this);
    }

    /// <summary>Field number for the "grid" field.</summary>
    public const int GridFieldNumber = 1;
    private int grid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Grid {
      get { return grid_; }
      set {
        grid_ = value;
      }
    }

    /// <summary>Field number for the "item_list" field.</summary>
    public const int ItemListFieldNumber = 2;
    private static readonly pbc::MapField<string, int>.Codec _map_itemList_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt32(16), 18);
    private readonly pbc::MapField<string, int> itemList_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> ItemList {
      get { return itemList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Grid != other.Grid) return false;
      if (!ItemList.Equals(other.ItemList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Grid != 0) hash ^= Grid.GetHashCode();
      hash ^= ItemList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Grid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Grid);
      }
      itemList_.WriteTo(output, _map_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Grid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Grid);
      }
      size += itemList_.CalculateSize(_map_itemList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemData other) {
      if (other == null) {
        return;
      }
      if (other.Grid != 0) {
        Grid = other.Grid;
      }
      itemList_.Add(other.itemList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Grid = input.ReadInt32();
            break;
          }
          case 18: {
            itemList_.AddEntriesFrom(input, _map_itemList_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
